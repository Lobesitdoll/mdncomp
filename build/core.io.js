const fs=require("fs"),path=require("path"),https=require("https");module.exports={request:function(t,e,o,r,s,n){let a;function i(t,e){s?s({statusCode:t&&t.statusCode?t.statusCode:-1,error:e}):err("Error",t,e)}e=e||(()=>!0),https.get(t,t=>{const f=[];let c=0;if(a=t,t&&t.statusCode){if(301===t.statusCode||302===t.statusCode)return this.request(t.headers.location,e,o,r,s);if(200===t.statusCode&&e({headers:t.headers})){let e=0|t.headers["content-length"];t.on("data",t=>{f.push(t),c+=t.length,o&&o(e?c/e:c%7/7)}).on("end",()=>{r(n?Buffer.concat(f):Buffer.concat(f).toString())})}else s&&i(t,"")}else s("Could not connect")}).on("error",t=>i(a,t)).end()},getConfigRootPath:function(){let t="win32"===process.platform?path.resolve(process.env.APPDATA,"../../"):process.env.HOME;return"darwin"===process.platform?path.resolve(t,"/Library/Preferences"):t},getConfigPath:function(){return path.resolve(this.getConfigRootPath(),".mdncomp")},getConfigFilePath:function(){return path.resolve(this.getConfigDataPath(),".config.json")},getConfigDataPath:function(){let t=this.getConfigPath();e(t);for(let o=0;o<arguments.length;o++)e(t=path.resolve(t,arguments[o]));function e(t){if(!fs.existsSync(t))try{fs.mkdirSync(t)}catch(e){log(`${ANSI.red}Could not create config folder:\n${t}\n${e.message}${ANSI.reset}`),"darwin"!==process.platform&&"linux"!==process.platform||e('Try using "sudo mdncomp --set <kv>" to write config.'),process.exitCode=1}}return t}};