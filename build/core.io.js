const fs=require("fs"),path=require("path"),https=require("https");module.exports={request:function(e,t,r,o,s,n){let a;function i(e,t){s?s({statusCode:e&&e.statusCode?e.statusCode:-1,error:t}):err("Error",e,t)}t=t||(()=>!0),https.get(e,e=>{const f=[];let u=0;if(a=e,e&&e.statusCode){if(301===e.statusCode||302===e.statusCode)return this.request(e.headers.location,t,r,o,s);if(200===e.statusCode&&t({headers:e.headers})){let t=0|e.headers["content-length"];e.on("data",e=>{f.push(e),u+=e.length,r&&r(t?u/t:u%7/7)}).on("end",()=>{o(n?Buffer.concat(f):Buffer.concat(f).toString())})}else s&&i(e,"")}else s("Could not connect")}).on("error",e=>i(a,e)).end()},getConfigRootPath:function(){let e="win32"===process.platform?path.resolve(process.env.APPDATA,"../../"):process.env.HOME;return"darwin"===process.platform?require("path").resolve(e,"/Library/Preferences"):e},getConfigPath:function(){return path.resolve(this.getConfigRootPath(),".mdncomp")},getConfigDataPath:function(){let e=this.getConfigPath();t(e);for(let r=0;r<arguments.length;r++)t(e=path.resolve(e,arguments[r]));function t(e){if(!fs.existsSync(e))try{fs.mkdirSync(e)}catch(t){log(`${ANSI.red}Could not create config folder:\n${e}\n${t.message}${ANSI.reset}`)}}return e}};