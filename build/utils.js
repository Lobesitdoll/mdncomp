"use strict";const mdn=require("../data/data.json"),utils=module.exports={buildTable:e=>{const t=[];return utils.listTopLevels().forEach(r=>{"browsers"!==r&&function e(r,s,a){const l=r[s];"object"==typeof l&&Object.keys(l).forEach(r=>{"__compat"!==r&&"worker_support"!==r&&"SharedArrayBuffer_as_param"!==r&&(t.push(a+"."+r),e(l,r,a+"."+r))})}(e||mdn,r,r)}),t},listTopLevels:e=>{let t=Object.keys(e||mdn),r=t.indexOf("browsers");return r>=0&&t.splice(r,1),t},getComparer:(e,t,r)=>{let s,a,l="",n="";e.startsWith("/")?(e=(a=(e=e.substr(1)).split("/"))[0],l=a[1]):t?e=function(e){let t=[],r="";e.endsWith(".")&&(r="$",e=e.substr(0,e.length-1));for(let r of e)t.push("\\^$.*+?()[]{}|".includes(r)?"\\"+r:r);return t.join(".*?")+r}(e.toLowerCase()):(e.endsWith(".")&&(e=e.substr(0,e.length-1),n="$"),e.startsWith("*")||(e="*"+e),e.endsWith("*")||n.length||(e+="*"),e=e.split("*").join(".*")+n),r&&!l.includes("i")&&(l+="i");try{s=new RegExp(e,l)}catch(e){log("Invalid regular expression:",e.message),process.exit(-1)}return s},getPathAsObject:(e,t)=>{let r=e.split("."),s=mdn;return r.forEach(e=>{s&&s[e]&&(s=s[e])}),t&&Object.keys(s).forEach(e=>{s&&s[e].__compat&&delete s[e]}),s},nameFromPath:e=>{let t=utils.getExt(e);return t.length?t:e},getExt:e=>{if("string"!=typeof e)return"";let t=e.lastIndexOf(".");return t<0?"":e.substr(++t)},prePathFromPath:e=>{let t=e.split("."),r=mdn,s="";return t.pop(),t.forEach(e=>{r&&(r[e].__compat&&(s+=e+"."),r=r[e])}),s.length>1?s:""},isCompat:e=>{let t=utils.getPathAsObject(e);return!!t&&"object"==typeof t.__compat},cleanHTML:(e,t,r)=>(e=e.replace(/<code>/gi,ANSI.cyan).replace(/<\/code>/gi,r||ANSI.reset).replace(/(<([^>]+)>)/gi,""),t&&(e=e.replace(/&lt;/gi,"<").replace(/&gt;/gi,">")),e),breakAnsiLine:(e,t)=>{let r,s=[],a=0,l=0,n=0,i=-1,o=!1,c=Math.max(72,t>>>0);for(;r=e[a];)o?"m"===r&&(o=!1):""===r?o=!0:(" "!==r&&"\n"!==r||(i=a),++l!==c&&"\n"!==r||(i<0&&(i=a),s.push(e.substring(n,i).trim()),n=i,i=-1,l=a-n)),a++;return l&&s.push(e.substr(n)),s.forEach((e,t)=>{s[t]=e.trim()}),s.length?s.join(lf):""},getMaxLength:e=>{let t=0;return e.forEach(e=>{let r=(utils.prePathFromPath(e)+utils.nameFromPath(e)).length;r>t&&(t=r)}),t},entities:e=>e.replace(/&nbsp;/gim," ").replace(/&quot;/gim,'"').replace(/&amp;/gim,"&").replace(/&lt;/gim,"<").replace(/&gt;/gim,">")};