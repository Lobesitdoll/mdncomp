const fs=require("fs"),path=require("path"),zlib=require("zlib"),io=require("./core.io"),rfc6902=require("rfc6902"),urlPrefix="https://raw.githubusercontent.com/epistemex/mdncomp-data/master/",urlPrefixR="https://gitlab.com/epistemex/mdncomp-data/raw/master/",filePrefix=path.normalize(path.dirname(process.mainModule.filename)+"/../data/"),clr=ANSI.clrToCursor+ANSI.cursorUp,PWIDTH=40;let wasRedundant=!1;function clrLine(){console.log(clr+"".padStart(options.maxChars," "))}function compareMD5(e,t){const r=t||wasRedundant?urlPrefixR:urlPrefix;let o;try{o=fs.readFileSync(filePrefix+"data.md5","utf-8")}catch(e){console.error(e)}io.request(r+"data.md5",null,null,t=>{e({local:o,remote:t})},r=>{wasRedundant=!0,t?console.error("An error occurred:",r.statusCode,r.error):(console.warn("Using redundancy...\n"),setImmediate(compareMD5,e,!0))})}function getPatch(e,t){let r=urlPrefix+"patches/"+e.remote+"_"+e.local;io.request(r,null,null,e=>{t(null,zlib.gunzipSync(e))},e=>t(e),!0)}function getRemoteData(e,t){const r=t||wasRedundant?urlPrefixR:urlPrefix;let o,a,n=0;function l(){console.log(clr+ANSI.white+"Downloading data "+ANSI.white+"["+ANSI.blue+"#".repeat(a)+" ".repeat(PWIDTH-a)+ANSI.white+"]"+ANSI.reset)}io.request(r+"data.gz",()=>!clrLine(),e=>{a=Math.ceil(PWIDTH*e),(o=Date.now())-n>250&&(n=o,l())},t=>{l(),e(null,zlib.gunzipSync(t))},r=>{wasRedundant=!0,t?e(r):(console.warn("Using redundancy...\n"),setImmediate(getRemoteData,e,!0))},!0)}function getCurrentData(){let e={};try{e=JSON.parse(fs.readFileSync(filePrefix+"data.json","utf-8"))}catch(e){}return e}function update(e,t){const r="No new data available.";compareMD5(o=>{function a(){getRemoteData((e,t)=>{e?console.error(e):n(t,o.remote)})}function n(e,t){try{fs.writeFileSync(filePrefix+"data.json",e,"utf-8"),fs.writeFileSync(filePrefix+"data.md5",t,"utf-8")}catch(e){console.error(e)}clrLine(),console.log("Data updated!")}e?a():o.local===o.remote?console.log(r):t?console.log(r):getPatch(o,(e,t)=>{if(e)console.log("No patch available - Loading full dataset..."),a();else{let e=getCurrentData(),r=!1;console.log("Applying patch...\n");let l=JSON.parse(t);rfc6902.applyPatch(e,l).forEach(e=>{e&&(console.error(`Error with "${e.name}": ${e.message}`),r=!0)}),r?(console.error(`Error during patching ${o.local} -> ${o.remote}.\nDownloading full dataset...`),a()):(!function(e){let t=0,r=0,o=0;e.forEach(e=>{"add"===e.op?t++:"remove"===e.op?r++:"replace"===e.op&&o++}),console.log(`Diff: ${t} adds, ${o} updates, ${r} removes\n`)}(l),n(JSON.stringify(e),o.remote))}})})}module.exports=update;