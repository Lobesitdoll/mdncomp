const utils=require("./core.utils"),mdn=utils.loadMDN(),table=loadModule("core.table"),tblOptions={alignDefault:"l",delimiter:"  ",header:!1,start:"?w",end:"?R",stringLength:utils.ansiLength};function browsers(t){let e="boolean"==typeof t?".":t;"string"==typeof e&&e.length&&"."!==e&&"?"!==e?(log(),log(listBrowsers(e.toLowerCase()))):(log(),log(`?R${text.valid} ${text.browserIds}:`),log(`?g${browserKeys().join(lf)}?R`),log(lf+`${text.valid} ${text.statuses}:`),log(ANSI.green+getBrowserStatusList().join(", ")),log())}function browserKeys(){return Object.keys(mdn.browsers)}function listBrowsers(t){const e=mdn.browsers[t],s=[];if(!e)return getBrowserStatusList().includes(t)?listBrowserOnStatus(t):[`${text.unknownBrowser}: "${t}" - ${text.noArgListsId}.`];let r=0;return Object.keys(e.releases).forEach(t=>{let e=t.split(".");e[0].length>r&&(r=e[0].length)}),Object.keys(e.releases).sort(function(t,e){const s=t.split("."),r=e.split("."),o=(0|s[0])+.001*(0|s[1])+1e-6*(0|s[2])+1e-9*(0|s[3]),n=(0|r[0])+.001*(0|r[1])+1e-6*(0|r[2])+1e-9*(0|r[3]);return o>n?1:o<n?-1:0}).forEach(o=>{const n=e.releases[o],l=n.release_date||"-",a=n.release_notes||"",i=n.status;s.push([e.name||t,`?g${padVersion(o,r)}`,`?c${l}`,`${statusColor(i)}${i}`,`?R${options.notes?a:""}`])}),table(s,tblOptions)}function listBrowserOnStatus(t){const e=[],s=statusColor(t),r=iterateBrowsers((e,s,r,o,n)=>e.status&&e.status===t?{browser:n||s,version:r,notes:e.release_notes,date:e.release_date||"-"}:null);let o=0;return r.forEach(t=>{const e=t.version.split(".",1)[0]||"";o=Math.max(o,e.length)}),e.push([`?R${text.status.toUpperCase()}?R: ${s}${t.toUpperCase()}?R\n`]),r.forEach(t=>{e.push([`?w${t.browser}`,`${s}${padVersion(t.version,o)}`,`?c${t.date}`,`?R${options.notes&&t.notes?t.notes:""}`])}),table(e,tblOptions)}function getBrowserStatusList(){return iterateBrowsers((t,e,s,r)=>r.includes(t.status)?null:t.status).sort()}function statusColor(t){return{beta:"?y",current:"?g",esr:"?w",nightly:"?b",planned:"?m",retired:"?G"}[t]||"?R"}function iterateBrowsers(t){const e=mdn.browsers,s=[];return Object.keys(e).forEach(r=>{let o=e[r].name;Object.keys(e[r].releases).forEach(n=>{let l=t(e[r].releases[n],r,n,s,o);l&&s.push(l)})}),s}function padVersion(t,e){const s=t.split(".");return s[0].padStart(e)+s.join(".").substr(s[0].length)}module.exports=browsers;