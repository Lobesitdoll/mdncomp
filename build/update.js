const io=require("./io"),ANSI=require("./ansi"),fs=require("fs"),path=require("path"),utils=require("./utils"),log=console.log.bind(console),urlPrefix="https://raw.githubusercontent.com/epistemex/data-for-mdncomp/master/";function serverMD5(e){io.request(urlPrefix+"data2.md5",null,null,e,e=>{log("An error occurred:",e.statusCode,e.error)})}function getCachedMD5(e){try{return fs.readFileSync(e)+""}catch(e){return""}}module.exports=function(e,r,t){const a=ANSI.clrToCursor+ANSI.cursorUp,o=path.normalize(path.dirname(process.mainModule.filename)+"/../data/data."),n=o+"json",l=o+"md5";function i(){io.request(urlPrefix+"data2.json",()=>!s(),e=>{let r=Math.round(50*e),t=50-r;log(a+ANSI.white+"Downloading data "+ANSI.white+"["+ANSI.green+"#".repeat(r)+" ".repeat(t)+ANSI.white+"]"+ANSI.reset+ANSI.black)},e=>{let r=t?function(e){let r;try{let t=utils.buildTable(require("../data/data.json")),a=utils.buildTable(JSON.parse(e)),o=[];a.forEach(e=>{t.includes(e)||o.push(e)}),r=`--diff-- Added features to BCD (${o.length}):\n`+o.join("\n")}catch(e){r=ANSI.red+"Could not perform diff:\n"+e.message+ANSI.reset}return r}(e):"";io.writeAll([{path:n,data:e},{path:l,data:io.calcMD5(e)}],(t,o)=>{o?t.forEach(e=>{e.err&&d("An error occurred writing data to file. Please retry: "+lf+e.path+": "+e.err+ANSI.reset)}):log(a+ANSI.white+("Updated with "+e.length+" bytes. All systems are GO!").padEnd(72," ")+ANSI.reset),r.length&&log(r)})},e=>d(lf+"An error occurred -"+lf+"Status code: "+e.statusCode+(e.error?lf+"Message: "+e.error:"")+ANSI.reset))}function s(){log(a+"".padStart(72," "))}function d(e){log(a+ANSI.red+e+ANSI.white)}log("Connecting..."),e?i():serverMD5(e=>{let t=getCachedMD5(l);s(),log(a+ANSI.white+(e===t?"No change in data - cancelling (or use the --fupdate option).":"Update is available ("+e+").")),r||e===t||i()})};