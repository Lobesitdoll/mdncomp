const io=require("./io"),ANSI=require("./ansi"),fs=require("fs"),path=require("path"),log=console.log.bind(console),urlPrefix="https://raw.githubusercontent.com/epistemex/data-for-mdncomp/master/";function serverMD5(e){io.request(urlPrefix+"data2.md5",null,null,e,e=>{log("An error occurred:",e.statusCode,e.error)})}function getCachedMD5(e,r){try{return fs.readFileSync(e)+""}catch(e){return calcFileMD5(r)}}function calcFileMD5(e){try{return calcMD5(fs.readFileSync(e))+""}catch(e){return""}}function calcMD5(e){return require("crypto").createHash("md5").update(e).digest("hex")+""}module.exports=function(e,r){const t=ANSI.clrToCursor+ANSI.cursorUp,a=path.normalize(path.dirname(process.mainModule.filename)+"/../data/data."),o=a+"json",n=a+"md5";function i(){io.request(urlPrefix+"data2.json",()=>!c(),e=>{let r=Math.round(50*e),a=50-r;log(t+ANSI.white+"Downloading data "+ANSI.white+"["+ANSI.green+"#".repeat(r)+" ".repeat(a)+ANSI.white+"]"+ANSI.reset+ANSI.black)},e=>{io.writeAll([{path:o,data:e},{path:n,data:calcMD5(e)}],(r,a)=>{a?r.forEach(e=>{e.err&&l("An error occurred writing data to file. Please retry: "+lf+e.path+": "+e.err+ANSI.reset)}):log(t+ANSI.white+("Updated with "+e.length+" bytes. All systems are GO!").padEnd(72," ")+ANSI.reset)})},e=>l(lf+"An error occurred -"+lf+"Status code: "+e.statusCode+(e.error?lf+"Message: "+e.error:"")+ANSI.reset))}function c(){log(t+"".padStart(72," "))}function l(e){log(t+ANSI.red+e+ANSI.white)}log("Connecting..."),e?i():serverMD5(e=>{let a=getCachedMD5(n,o);c(),log(t+ANSI.white+(e===a?"No change in data - cancelling (or use the --fupdate option).":"Update is available ("+e+").")),r||e===a||i()})};