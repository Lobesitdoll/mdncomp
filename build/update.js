const log=console.log.bind(console),fs=require("fs"),path=require("path"),zlib=require("zlib"),io=require("./io"),ANSI=require("./ansi"),rfc6902=require("rfc6902"),urlPrefix="https://raw.githubusercontent.com/epistemex/mdncomp-data/master/",urlPrefixR="https://gitlab.com/epistemex/mdncomp-data/raw/master/",filePrefix=path.normalize(path.dirname(process.mainModule.filename)+"/../data/"),clr=ANSI.clrToCursor+ANSI.cursorUp,PWIDTH=40;let wasRedundant=!1;function clrLine(){log(clr+"".padStart(72," "))}function compareMD5(e,t){const a=t||wasRedundant?urlPrefixR:urlPrefix;let r;try{r=fs.readFileSync(filePrefix+"data.md5","utf-8")}catch(e){}io.request(a+"data.md5",null,null,t=>{e({local:r,remote:t})},a=>{wasRedundant=!0,t?log("An error occurred:",a.statusCode,a.error):(log("Using redundancy...\n"),setImmediate(compareMD5,e,!0))})}function getPatch(e,t){let a=urlPrefix+"patches/"+e.remote+"_"+e.local;io.request(a,null,null,e=>{t(null,zlib.gunzipSync(e))},e=>{t(e)},!0)}function getRemoteData(e,t){const a=t||wasRedundant?urlPrefixR:urlPrefix;let r,l,n=0;function o(){log(clr+ANSI.white+"Downloading data "+ANSI.white+"["+ANSI.blue+"#".repeat(l)+" ".repeat(PWIDTH-l)+ANSI.white+"]"+ANSI.reset)}io.request(a+"data.gz",()=>!clrLine(),e=>{l=Math.ceil(PWIDTH*e),(r=Date.now())-n>250&&(n=r,o())},t=>{o(),e(null,zlib.gunzipSync(t))},a=>{wasRedundant=!0,t?e(a):(log("Using redundancy...\n"),setImmediate(getRemoteData,e,!0))},!0)}function getCurrentData(){let e={};try{e=JSON.parse(fs.readFileSync(filePrefix+"data.json","utf-8"))}catch(e){}return e}module.exports=function(e,t){const a="No new data available.";compareMD5(r=>{function l(){getRemoteData((e,t)=>{e?log(e):n(t,r.remote)})}function n(e,t){try{fs.writeFileSync(filePrefix+"data.json",e,"utf-8"),fs.writeFileSync(filePrefix+"data.md5",t,"utf-8")}catch(e){log(e)}clrLine(),log("Data updated!")}e?l():r.local===r.remote?log(a):t?log(a):getPatch(r,(e,t)=>{if(e)log("No patch available - Loading full dataset..."),l();else{let e=getCurrentData(),a=!1;log("Applying patch...\n");let o=JSON.parse(t);rfc6902.applyPatch(e,o).forEach(e=>{e&&(log(`Error with "${e.name}": ${e.message}`),a=!0)}),a?(log(`Error during patching ${r.local} -> ${r.remote}.\nDownloading full dataset...`),l()):(!function(e){let t=0,a=0,r=0;e.forEach(e=>{"add"===e.op?t++:"remove"===e.op?a++:"replace"===e.op&&r++}),log(`Diff: ${t} adds, ${r} updates, ${a} removes\n`)}(o),n(JSON.stringify(e),r.remote))}})})};